version: '3.9'

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    command: npm run start:dev
    volumes:
      - ./backend:/app
      - /app/node_modules
      - ./.env:/app/.env
    ports:
      - "3001:3000"
    env_file:
      - .env
    depends_on:
      - db
      - redis

  redis:
    image: redis:7-alpine
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    restart: always


  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - ./.env:/app/.env
    ports:
      - "3000:5173"
    env_file:
      - .env

  landingpage:
    build:
      context: ./landingpage
      dockerfile: Dockerfile
    volumes:
      - ./landingpage:/app
      - /app/node_modules
      - ./.env:/app/.env
    ports:
      - "3002:5173"
    env_file:
      - .env

  db:
    image: mysql:8.0
    restart: always
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: 11675800
      MYSQL_DATABASE: eniwhere_db
      MYSQL_USER: eniwhere_user
      MYSQL_PASSWORD: 11675800
    ports:
      - "3307:3306"
    volumes:
      - ./mysql/init:/docker-entrypoint-initdb.d

volumes:
  redis-data: